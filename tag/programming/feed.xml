<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/programming/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2021-01-22T17:35:03+09:00</updated>
  <id>/tag/programming/feed.xml</id>

  
  
  

  
    <title type="html">Oaktree_lab | </title>
  

  
    <subtitle>review and share</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">자료구조의 개요</title>
      <link href="/data-structure" rel="alternate" type="text/html" title="자료구조의 개요" />
      <published>2021-01-22T00:00:00+09:00</published>
      <updated>2021-01-22T00:00:00+09:00</updated>
      <id>/data%20structure</id>
      <content type="html" xml:base="/data-structure">&lt;h1 id=&quot;자료구조의-개요&quot;&gt;자료구조의 개요&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;자료구조(data structure)&lt;/p&gt;

  &lt;p&gt;거대한 데이터를 효율적이고 빠르게 처리하기 위한 구조&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;책 한권을 찾으려면 지정한 위치에 놓는다&lt;/p&gt;

&lt;p&gt;책 100권 중 한권을 찾으려면 &lt;strong&gt;책장&lt;/strong&gt;에 두고 찾는다&lt;/p&gt;

&lt;p&gt;책 1000권 중 한권을 찾으려면 &lt;strong&gt;여러 책장&lt;/strong&gt;에 두고 &lt;strong&gt;순서&lt;/strong&gt;와 &lt;strong&gt;위치&lt;/strong&gt;를 지정해 두고 찾는다..&lt;/p&gt;

&lt;p&gt;​                                                       ‘’’’’&lt;/p&gt;

&lt;p&gt;이처럼 적은 양의 데이터는 찾기 쉽지만 많은 양의 데이터는 찾기가 쉽지 않다. 그래서 &lt;strong&gt;그룹(group)&lt;/strong&gt;을 만들고 &lt;strong&gt;색인(index)&lt;/strong&gt;과 &lt;strong&gt;값(value)&lt;/strong&gt;을 지정해서 빠르게 찾을 수 있도록 한다. 여기서  배열(array)와 리스트(list)라는 개념이 고안되었다.&lt;/p&gt;

&lt;p&gt;​														‘’’’’&lt;/p&gt;

&lt;p&gt;배열과 리스트의 기본적인 개념과 차이에 대해 알아보자&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;___ ____ ____ ____ ____ ____
10 | 20 | 30 | 40 | 50 | 60 | -&amp;gt; value  
0  | 1  | 2  | 3  | 4  | 5  | -&amp;gt; index	
int int  int  int  int  int   -&amp;gt; element(value + index); 요소는 값과 인덱스를 포함한 구조
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;배열&lt;/th&gt;
      &lt;th&gt;리스트&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;추가&lt;/td&gt;
      &lt;td&gt;해당인덱스 원래값에 추가한 데이터를 덮어씀&lt;/td&gt;
      &lt;td&gt;들어가고 싶은 순서에 있는 요소들을 한칸씩 뒤로넣고 해당자리에 들어감&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;삭제&lt;/td&gt;
      &lt;td&gt;껍데기는 있지만 값은 없어짐(비어있는 저장공간 O,인덱스 존재)&lt;/td&gt;
      &lt;td&gt;요소가 없어지고, 그 자리에 다음 요소가 옴(비어있는 저장공간 X)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;​															‘’’’’’’&lt;/p&gt;

&lt;p&gt;자료구조는 프로그래밍 언어마다 지원하는 양상이 다르다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C 언어는 리스트를 지원하지 않음
java는 배열과 리스트를 둘 다 지원하고 리스트는 array list와 linked list로 나누어짐
python은 리스트를 지원(라이브러리를 통해 배열사용가능)
....
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;​															  “”””&lt;/p&gt;

&lt;p&gt;기본적인 자료구조들&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;선형구조&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;배열&lt;/li&gt;
      &lt;li&gt;연결 리스트&lt;/li&gt;
      &lt;li&gt;스택&lt;/li&gt;
      &lt;li&gt;큐&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비선형구조&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;트리(tree)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;그래프(graph)&lt;/p&gt;

        &lt;p&gt;​										    	“”””&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;자료구조가 데이터의 표현하는 것이라고 한다면, &lt;strong&gt;알고리즘&lt;/strong&gt;은 표현된 데이터를 처리하는 것이라고 볼 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;알고리즘의-개요&quot;&gt;알고리즘의 개요&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;algorithm&lt;/p&gt;

  &lt;p&gt;어떠한 문제해결을 위해 여러 방법들을 모색하고 결과를 도출하는 것&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;알고리즘은 궁극저으로, 문제의 해결을 기계로 실행하기 위한 것이다&lt;/p&gt;

&lt;p&gt;알고리즘의 특징은 다음과 같다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;입력은 0이상으로 없을수도 있다, 하지만 출력은 반드시 하나 이상 생성되어야한다&lt;/li&gt;
  &lt;li&gt;유한성(finitenss): 여러작업은 반드시 유한한 시간내에 종료되어야 된다&lt;/li&gt;
  &lt;li&gt;명확성(definiteness): 각 단계는 명확해야 하며, 모호하지 말아야 한다&lt;/li&gt;
  &lt;li&gt;유효성(effectiveness): 모든 명령은 실행가능 해야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;효율적인 데이터의 처리를 위해선 알고리즘에 성능또한 중요하다. 성능을 분석하려면 기본적으로 수학적 배경지식을 필요로 한다&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;지수식 y = 2^x
로그식 y = log2 (x)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>qkrqjatn218</name>
        
        
      </author>

      

      
        <category term="programming" />
      

      
        <summary type="html">자료구조의 개요</summary>
      

      
      
    </entry>
  
</feed>
